/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface ClickableHeader {
        "level": number;
    }
    interface DisplayText {
        "level": number;
        "text": string;
    }
    interface IconButtonWithBubble {
        "bubbleText": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface PrimaryButton {
        "label": string;
    }
    interface ProductRating {
        /**
          * Rating
         */
        "rating": number;
        /**
          * Number of ratings
         */
        "ratingCount": number;
    }
    interface SimpleList {
    }
    interface SimpleListItem {
    }
}
declare global {
    interface HTMLClickableHeaderElement extends Components.ClickableHeader, HTMLStencilElement {
    }
    var HTMLClickableHeaderElement: {
        prototype: HTMLClickableHeaderElement;
        new (): HTMLClickableHeaderElement;
    };
    interface HTMLDisplayTextElement extends Components.DisplayText, HTMLStencilElement {
    }
    var HTMLDisplayTextElement: {
        prototype: HTMLDisplayTextElement;
        new (): HTMLDisplayTextElement;
    };
    interface HTMLIconButtonWithBubbleElement extends Components.IconButtonWithBubble, HTMLStencilElement {
    }
    var HTMLIconButtonWithBubbleElement: {
        prototype: HTMLIconButtonWithBubbleElement;
        new (): HTMLIconButtonWithBubbleElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLPrimaryButtonElement extends Components.PrimaryButton, HTMLStencilElement {
    }
    var HTMLPrimaryButtonElement: {
        prototype: HTMLPrimaryButtonElement;
        new (): HTMLPrimaryButtonElement;
    };
    interface HTMLProductRatingElement extends Components.ProductRating, HTMLStencilElement {
    }
    var HTMLProductRatingElement: {
        prototype: HTMLProductRatingElement;
        new (): HTMLProductRatingElement;
    };
    interface HTMLSimpleListElement extends Components.SimpleList, HTMLStencilElement {
    }
    var HTMLSimpleListElement: {
        prototype: HTMLSimpleListElement;
        new (): HTMLSimpleListElement;
    };
    interface HTMLSimpleListItemElement extends Components.SimpleListItem, HTMLStencilElement {
    }
    var HTMLSimpleListItemElement: {
        prototype: HTMLSimpleListItemElement;
        new (): HTMLSimpleListItemElement;
    };
    interface HTMLElementTagNameMap {
        "clickable-header": HTMLClickableHeaderElement;
        "display-text": HTMLDisplayTextElement;
        "icon-button-with-bubble": HTMLIconButtonWithBubbleElement;
        "my-component": HTMLMyComponentElement;
        "primary-button": HTMLPrimaryButtonElement;
        "product-rating": HTMLProductRatingElement;
        "simple-list": HTMLSimpleListElement;
        "simple-list-item": HTMLSimpleListItemElement;
    }
}
declare namespace LocalJSX {
    interface ClickableHeader {
        "level"?: number;
    }
    interface DisplayText {
        "level"?: number;
        "text"?: string;
    }
    interface IconButtonWithBubble {
        "bubbleText"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface PrimaryButton {
        "label"?: string;
        "onOnClick"?: (event: CustomEvent<any>) => void;
    }
    interface ProductRating {
        /**
          * Rating
         */
        "rating"?: number;
        /**
          * Number of ratings
         */
        "ratingCount"?: number;
    }
    interface SimpleList {
    }
    interface SimpleListItem {
    }
    interface IntrinsicElements {
        "clickable-header": ClickableHeader;
        "display-text": DisplayText;
        "icon-button-with-bubble": IconButtonWithBubble;
        "my-component": MyComponent;
        "primary-button": PrimaryButton;
        "product-rating": ProductRating;
        "simple-list": SimpleList;
        "simple-list-item": SimpleListItem;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "clickable-header": LocalJSX.ClickableHeader & JSXBase.HTMLAttributes<HTMLClickableHeaderElement>;
            "display-text": LocalJSX.DisplayText & JSXBase.HTMLAttributes<HTMLDisplayTextElement>;
            "icon-button-with-bubble": LocalJSX.IconButtonWithBubble & JSXBase.HTMLAttributes<HTMLIconButtonWithBubbleElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "primary-button": LocalJSX.PrimaryButton & JSXBase.HTMLAttributes<HTMLPrimaryButtonElement>;
            "product-rating": LocalJSX.ProductRating & JSXBase.HTMLAttributes<HTMLProductRatingElement>;
            "simple-list": LocalJSX.SimpleList & JSXBase.HTMLAttributes<HTMLSimpleListElement>;
            "simple-list-item": LocalJSX.SimpleListItem & JSXBase.HTMLAttributes<HTMLSimpleListItemElement>;
        }
    }
}
